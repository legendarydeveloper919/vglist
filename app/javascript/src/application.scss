@import './stylesheets/bulma-variables.scss';
@import '~bulma/bulma.sass';
@import './stylesheets/padding-and-margins.scss';
@import './stylesheets/utilities.scss';
@import './stylesheets/home.scss';

nav.navbar {
  background: #5856d6;
  // Subtle box-shadow for nav bar.
  box-shadow: 0 0 2px 2px rgba(0, 0, 0, 0.3);
  padding: 0 20px;

  // Override burger icon color when hovered.
  // There doesn't seem to be a Bulma variable for this.
  .navbar-burger:hover {
    color: #fff;
  }

  // Show underlines on-hover on desktop.
  @include from($desktop) {
    // Don't apply the borders to items with dropdowns or fields (the search bar).
    .navbar-item:not(.has-dropdown),
    .navbar-item:not(.field) {
      // This prevents the navbar items from moving up and down when hovered.
      border-bottom: 2px solid transparent;
      transition: border-bottom 200ms;

      &:hover {
        border-bottom: 2px solid rgba(255, 255, 255, 0.8);
      }
    }

    .navbar-dropdown {
      .navbar-item {
        transition: border-bottom 0ms;
        transition: background-color 200ms;
        transition: color 0ms;
        border-bottom: 0;
        color: #333;

        &:hover {
          border-bottom: 0;
        }
      }

      a.navbar-item:hover {
        background-color: #eeeded;
      }

      a.navbar-item.is-active {
        background-color: #5178bc;
        color: #fff;
      }
    }
  }

  .navbar-dropdown {
    font-size: 1rem;
  }

  .navbar-item img.user-avatar {
    max-height: 1.8rem;
    max-width: 1.8rem;
    object-fit: scale-down;
    border: 1px solid #fff;
  }

  .navbar-dropdown-header {
    font-size: 0.8rem;
    font-weight: 700;
  }

  img.game-cover {
    max-height: 48px;
    overflow: clip;
    object-fit: cover;
  }
}

.v-select {
  display: block;
}

.navbar-search-dropdown {
  max-height: 400px;
  height: auto;
  overflow: scroll;
}

// Customization for bulma dropdowns.
// Based on https://github.com/jgthms/bulma/pull/2142
// Don't apply these styles to vue-select dropdowns.
.dropdown:not(.v-select) {
  button > .icon {
    fill: $dropdown-content-arrow;
    z-index: 4;
    transition: transform 150ms;
    margin-top: 2px;
  }

  &.is-active {
    button > .icon {
      fill: $dropdown-content-arrow;
      transform: rotate(-180deg);
      margin-top: 0;
    }
  }

  &.is-fullwidth-mobile {
    @include touch {
      display: flex;
      width: 100%;
    }
  }

  .dropdown-item.no-link-highlight a {
    color: #000;
  }
}

.buttons {
  align-items: initial;
}

.dropdown-trigger {
  &.is-fullwidth-mobile {
    @include touch {
      display: flex;
      width: 100%;
      margin-right: 0;
    }
  }

  button {
    &.is-fullwidth-mobile {
      @include touch {
        display: flex;
        width: 100%;
      }
    }
  }
}

.dropdown-menu.is-fullwidth-mobile {
  @include touch {
    width: 100%;
  }
}

.file-select > input[type='file'] {
  display: none;
}

.file-select > .select-button {
  padding: 1rem;

  color: white;
  background-color: #2ea169;

  border-radius: 0.3rem;

  text-align: center;
  font-weight: bold;
}

.hero-area {
  display: flex;
  flex-flow: column wrap;

  @include from($desktop) {
    flex-flow: row nowrap;

    .text-block {
      flex: 1 1 100%;
      padding-left: 15px;
    }
  }

  @include touch {
    .text-block {
      text-align: center;
    }
  }

  .hero-image {
    flex: 1 1 150px;

    img {
      max-height: 100%;
      max-width: 100%;
      object-fit: contain;
      object-position: top left;
    }

    &.hero-image-150 {
      img {
        height: 150px;
        width: auto;
        max-width: 100%;
      }
    }

    @include touch {
      margin: auto;
    }
  }

  .game-cover {
    flex: 1 1 300px;
    height: auto;
    max-height: 360px;
    width: 240px;

    // On mobile, don't force a flex-basis.
    @include touch {
      flex: 1 1 auto;
    }
  }
}

.game-card-list,
.user-card-list {
  display: grid;
  grid-gap: 20px;
  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));

  @include from($tablet) {
    grid-template-columns: repeat(auto-fill, minmax(400px, 1fr));
  }
}

.custom-card {
  background-color: #fff;
  box-shadow: 0 2px 3px rgba(#000, 0.1), 0 0 0 1px rgba(#000, 0.1);
  color: hsl(0, 0%, 21%);
  width: auto;
  position: relative;
  overflow: hidden;

  &.game-card {
    height: 200px;
  }

  &.user-card {
    height: 80px;

    .card-content {
      overflow: hidden;
    }

    .title {
      text-overflow: ellipsis;
      overflow: hidden;
      word-break: normal;
    }

    img {
      width: 80px;
      min-width: 80px;
      height: 80px;
    }
  }

  .card-container {
    padding: 0;
    display: flex;
    flex-flow: row nowrap;
    height: 100%;
  }

  .card-content {
    padding: 15px;
  }

  .game-cover {
    height: 100%;
    width: 140px;
    max-width: 140px;
    min-width: 140px;

    img {
      height: 100%;
      width: 100%;
      object-fit: cover;
    }
  }
}

.game-card-dropdown {
  position: absolute;
  top: 0;
  right: 0;
}

// Remove the radius and modify padding on notifications so they can be used
// for Rails flashes.
.notification.flash-notification {
  border-radius: 0;
  padding: 1rem 2.5rem 1rem 1.5rem;

  // Reset the positioning of the delete element within the
  // notification container.
  > .delete {
    position: relative;
    right: auto;
    top: auto;
  }
}

.notification.errors-notification {
  li {
    list-style: initial;
    margin-left: 20px;
  }
}

.modal-card {
  max-height: calc(100vh - 120px);
  overflow: scroll;

  // When the modal card title is too long, make sure it
  // gets a trailing ellipsis instead of causing horizontal scrolling.
  .modal-card-title {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
    max-width: calc(100% - 20px);
    padding-right: 10px;
  }
}

.modal-card-body-allow-overflow {
  overflow: initial;
}

// Make input placeholder text darker by default.
.input::placeholder {
  color: #333;
  opacity: 0.5;
}

// Limit width of infobox.
.infobox {
  max-width: 400px;
  width: 100%;
}

.stats-card {
  display: flex;
  flex-flow: row wrap;
  justify-content: space-evenly;
  padding: 15px;
}

.button.is-fullwidth-mobile {
  @include touch {
    display: flex;
    width: 100%;
  }
}

.is-fullwidth-mobile {
  @include touch {
    width: 100%;
  }
}

.level {
  .level-item {
    white-space: nowrap;
    flex-basis: 100px;
    margin: 0;
    padding: 5px;
  }
}

.more-from-this-series-card {
  max-width: 500px;

  .games {
    display: grid;
    grid-gap: 10px;
    grid-template-columns: repeat(auto-fill, minmax(130px, 1fr));

    a {
      display: inline-block;
      position: relative;
    }
  }

  .game-cover {
    height: 200px;
    width: 140px;
    max-width: 140px;
    min-width: 140px;

    @include touch {
      width: 100%;
      max-width: 100%;
      min-width: 100%;
    }

    img {
      height: 100%;
      width: 100%;
      object-fit: cover;
      position: absolute;
    }

    p {
      color: #fff;
      padding: 8px;
      position: absolute;
      bottom: 0;
      background-color: rgba(#333, 0.7);
      width: 100%;
    }
  }
}

// Hide pagination except Previous/Next on mobile.
@include touch {
  .pagination-list {
    display: none;
  }
}

.stats-card {
  .level {
    width: 100%;
  }
}

.percentage-bar {
  height: 18px;
  width: 100%;
  border-radius: 4px;
  overflow: hidden;
  // background-color: #d1cfcf;

  .percentage-bar-portion {
    display: inline-block;
    height: 100%;
    width: 100%;
    overflow: hidden;
    color: #fff;

    &.color-1 {
      background-color: #03a9f4;
    }
    &.color-2 {
      background-color: #ff5252;
    }
    &.color-3 {
      background-color: #e91e63;
    }
    &.color-4 {
      background-color: #ff5722;
    }
    &.color-5 {
      background-color: #8bc34a;
    }
    &.color-6 {
      background-color: #3f51b5;
    }
    &.color-7 {
      background-color: #7c4dff;
    }
    // Last color is 'Unknown'
    &.color-8 {
      background-color: #d1cfcf;
    }
  }
}

// Tooltip styling for v-tooltip.
.tooltip {
  display: block !important;
  z-index: 10000;

  .tooltip-inner {
    background: rgba(#333, 0.9);
    color: white;
    border-radius: 4px;
    padding: 5px 10px 4px;
  }

  .tooltip-arrow {
    width: 0;
    height: 0;
    border-style: solid;
    position: absolute;
    margin: 5px;
    border-color: rgba(#333, 0.9);
    z-index: 1;
  }

  &[x-placement^='top'] {
    margin-bottom: 5px;

    .tooltip-arrow {
      border-width: 5px 5px 0 5px;
      border-left-color: transparent !important;
      border-right-color: transparent !important;
      border-bottom-color: transparent !important;
      bottom: -5px;
      left: calc(50% - 5px);
      margin-top: 0;
      margin-bottom: 0;
    }
  }

  &[x-placement^='bottom'] {
    margin-top: 5px;

    .tooltip-arrow {
      border-width: 0 5px 5px 5px;
      border-left-color: transparent !important;
      border-right-color: transparent !important;
      border-top-color: transparent !important;
      top: -5px;
      left: calc(50% - 5px);
      margin-top: 0;
      margin-bottom: 0;
    }
  }

  &[x-placement^='right'] {
    margin-left: 5px;

    .tooltip-arrow {
      border-width: 5px 5px 5px 0;
      border-left-color: transparent !important;
      border-top-color: transparent !important;
      border-bottom-color: transparent !important;
      left: -5px;
      top: calc(50% - 5px);
      margin-left: 0;
      margin-right: 0;
    }
  }

  &[x-placement^='left'] {
    margin-right: 5px;

    .tooltip-arrow {
      border-width: 5px 0 5px 5px;
      border-top-color: transparent !important;
      border-right-color: transparent !important;
      border-bottom-color: transparent !important;
      right: -5px;
      top: calc(50% - 5px);
      margin-left: 0;
      margin-right: 0;
    }
  }

  &[aria-hidden='true'] {
    visibility: hidden;
    opacity: 0;
    transition: opacity 0.25s, visibility 0.25s;
  }

  &[aria-hidden='false'] {
    visibility: visible;
    opacity: 1;
    transition: opacity 0.25s;
  }
}

.library-edit-bar.level {
  position: sticky;
  top: 0;
  width: 100%;
  background-color: #fff;
  border: 1px solid #dcdfe6;
  margin-bottom: 5px;
  // Modal overlay is 40, make sure to stay below it.
  z-index: 39;
  padding: 8px 5px 8px 15px;

  // Set width to auto to make the input field display the placeholder value.
  // By default, width is set to 0 for some reason.
  .vs__search,
  .vs__search:focus {
    width: auto;
  }
}

// Turn the button red and add a shaking animation when there's an error.
.js-submit-button-error {
  background-color: #ff3860 !important;
  animation: shake 0.82s cubic-bezier(.36,.07,.19,.97) both;
  transform: translate3d(0, 0, 0);
  backface-visibility: hidden;
}

@keyframes shake {
  10%, 90% {
    transform: translate3d(-1px, 0, 0);
  }
  
  20%, 80% {
    transform: translate3d(2px, 0, 0);
  }

  30%, 50%, 70% {
    transform: translate3d(-4px, 0, 0);
  }

  40%, 60% {
    transform: translate3d(4px, 0, 0);
  }
}

// Spacing between elements and make sure the dropdowns are fullwidth.
.games-search-sidebar {
  .games-filters > div {
    margin-top: 10px;
  }

  .dropdown {
    display: block;
  }

  .dropdown-menu {
    position: relative;
  }
}

// For easily selecting the whole piece of text, e.g. for easy copy-paste.
.user-select-all {
  user-select: all;
}

// Limit the width of the sign-in container.
.sign-in-container {
  max-width: 500px;

  @include touch {
    box-shadow: none;
  }
}

// Toggles the display of icon-1 and icon-2 child elements when hovering on this element.
.toggle-icon-on-hover {
  &:hover > .svg-icon.icon-1 {
    display: none;
  }

  > .svg-icon.icon-2 {
    display: none;
  }

  &:hover > .svg-icon.icon-2 {
    display: initial;
  }
}

// Styling for the navbar search field, mostly the icon.
.navbar-search-input {
  + span.icon {
    fill: $grey-light;
    transition: fill 250ms;
  }
  
  &:focus + span.icon {
    fill: darken($grey-light, 30%);
  }
}

.is-vertical-align-middle {
  vertical-align: middle;
}
