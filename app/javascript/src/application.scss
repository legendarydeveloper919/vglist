@import './stylesheets/bulma-variables.scss';
@import '~bulma/bulma.sass';
@import './stylesheets/padding-and-margins.scss';

nav.navbar {
  // Background gradient for the navbar
  background: rgb(5, 53, 137);
  background: linear-gradient(45deg, #053589 0%, #5178bc 100%);
  // Subtle box-shadow for nav bar.
  box-shadow: 0 0 2px 2px rgba(0, 0, 0, 0.4);
  padding: 0 20px;

  // Override burger icon color when hovered.
  // There doesn't seem to be a Bulma variable for this.
  .navbar-burger:hover {
    color: #fff;
  }

  // Show underlines on-hover on desktop.
  @include from($desktop) {
    // Don't apply the borders to items with dropdowns or fields (the search bar).
    .navbar-item:not(.has-dropdown),
    .navbar-item:not(.field) {
      // This prevents the navbar items from moving up and down when hovered.
      border-bottom: 2px solid transparent;
      transition: border-bottom 200ms;

      &:hover {
        border-bottom: 2px solid rgba(255, 255, 255, 0.8);
      }
    }

    .navbar-dropdown {
      .navbar-item {
        transition: border-bottom 0ms;
        transition: background-color 200ms;
        transition: color 0ms;
        border-bottom: 0;
        color: #333;

        &:hover {
          border-bottom: 0;
        }
      }

      a.navbar-item:hover {
        background-color: #eeeded;
      }

      a.navbar-item.is-active {
        background-color: #5178bc;
        color: #fff;
      }
    }
  }

  .navbar-dropdown {
    font-size: 1rem;
  }

  .navbar-item img {
    max-height: 1.8rem;
    max-width: 1.8rem;
    object-fit: scale-down;
    border: 1px solid #fff;
  }

  .navbar-dropdown-header {
    font-size: 0.8rem;
    font-weight: 700;
  }
}

.v-select {
  display: block;
}

.navbar-search-dropdown {
  max-height: 400px;
  height: auto;
  overflow: scroll;
}

// Customization for bulma dropdowns.
// Based on https://github.com/jgthms/bulma/pull/2142
// Don't apply these styles to vue-select dropdowns.
.dropdown:not(.v-select) {
  button::after {
    @extend %arrow;
    border-color: $dropdown-content-arrow;
    right: 0.75rem;
    z-index: 4;
  }

  &.is-active {
    button::after {
      @extend %arrow;
      border-color: $dropdown-content-arrow;
      transform: rotate(135deg);
      top: 1.4em;
    }
  }

  &.is-fullwidth-mobile {
    @include touch {
      display: flex;
      width: 100%;
    }
  }
}

.dropdown-trigger {
  &.is-fullwidth-mobile {
    @include touch {
      display: flex;
      width: 100%;
    }
  }

  button {
    padding-right: 2rem;

    &.is-fullwidth-mobile {
      @include touch {
        display: flex;
        width: 100%;
      }
    }
  }
}

.file-select > input[type='file'] {
  display: none;
}

.file-select > .select-button {
  padding: 1rem;

  color: white;
  background-color: #2ea169;

  border-radius: 0.3rem;

  text-align: center;
  font-weight: bold;
}

.hero-area {
  display: flex;
  flex-flow: column wrap;

  @include from($desktop) {
    flex-flow: row nowrap;

    .text-block {
      padding-left: 15px;
    }
  }

  .hero-image {
    img {
      height: 100%;
      width: 100%;
      max-width: 100%;
    }

    &.hero-image-150 {
      img {
        height: 150px;
        width: auto;
        max-width: 100%;
      }
    }
  }

  .game-cover {
    height: auto;
    max-height: 360px;
    width: 240px;
  }
}

.game-card-list,
.user-card-list {
  display: grid;
  grid-gap: 20px;
  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));

  @include from($desktop) {
    grid-template-columns: repeat(auto-fill, minmax(400px, 1fr));
  }
}

.custom-card {
  background-color: #fff;
  box-shadow: 0 2px 3px rgba(#000, 0.1), 0 0 0 1px rgba(#000, 0.1);
  color: hsl(0, 0%, 21%);
  width: auto;
  position: relative;
  overflow: hidden;

  &.game-card {
    height: 200px;
  }

  &.user-card {
    height: 80px;

    .card-content {
      overflow: hidden;
    }

    .title {
      text-overflow: ellipsis;
      overflow: hidden;
      word-break: normal;
    }

    img {
      width: 80px;
      min-width: 80px;
      height: 80px;
    }
  }

  .card-container {
    padding: 0;
    display: flex;
    flex-flow: row nowrap;
    height: 100%;
  }

  .card-content {
    padding: 15px;
  }

  .game-cover {
    height: 100%;
    width: 140px;
    max-width: 140px;
    min-width: 140px;

    img {
      height: 100%;
      width: 100%;
      object-fit: cover;
    }
  }
}

// Remove the radius and modify padding on notifications so they can be used
// for Rails flashes.
.notification.flash-notification {
  border-radius: 0;
  padding: 1rem 2.5rem 1rem 1.5rem;

  // Reset the positioning of the delete element within the
  // notification container.
  > .delete {
    position: relative;
    right: auto;
    top: auto;
  }
}

.notification.errors-notification {
  li {
    list-style: initial;
    margin-left: 20px;
  }
}

.modal-card {
  max-height: calc(100vh - 120px);
  overflow: scroll;
}

.modal-card-body-allow-overflow {
  overflow: initial;
}

// Make input placeholder text darker by default.
.input::placeholder {
  color: #333;
  opacity: 0.5;
}

// Limit width of infobox.
.infobox {
  max-width: 400px;
  width: 100%;
}

.stats-card {
  display: flex;
  flex-flow: row wrap;
  justify-content: space-evenly;
  padding: 15px;
}

.button.is-fullwidth-mobile {
  @include touch {
    display: flex;
    width: 100%;
  }
}
