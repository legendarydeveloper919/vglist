# This file is autogenerated. Do not edit it by hand. Regenerate it with:
#   srb rbi gems

# typed: strict
#
# If you would like to make changes to this file, great! Please create the gem's shim here:
#
#   https://github.com/sorbet/sorbet-typed/new/master?filename=lib/invisible_captcha/all/invisible_captcha.rbi
#
# invisible_captcha-1.1.0

module InvisibleCaptcha
  def self.call_lambda_or_return(obj); end
  def self.css_strategy; end
  def self.generate_random_honeypot; end
  def self.get_honeypot; end
  def self.honeypots; end
  def self.honeypots=(arg0); end
  def self.init!; end
  def self.injectable_styles; end
  def self.injectable_styles=(arg0); end
  def self.sentence_for_humans; end
  def self.sentence_for_humans=(arg0); end
  def self.setup; end
  def self.timestamp_enabled; end
  def self.timestamp_enabled=(arg0); end
  def self.timestamp_error_message; end
  def self.timestamp_error_message=(arg0); end
  def self.timestamp_threshold; end
  def self.timestamp_threshold=(arg0); end
  def self.visual_honeypots; end
  def self.visual_honeypots=(arg0); end
end
module InvisibleCaptcha::ControllerExt
  def detect_spam(options = nil); end
  def honeypot_spam?(options = nil); end
  def on_spam(options = nil); end
  def on_timestamp_spam(options = nil); end
  def timestamp_spam?(options = nil); end
  def warn_spam(message); end
end
module InvisibleCaptcha::ControllerExt::ClassMethods
  def invisible_captcha(options = nil); end
end
module InvisibleCaptcha::ViewHelpers
  def build_input_name(honeypot, scope = nil); end
  def build_invisible_captcha(honeypot = nil, scope = nil, options = nil); end
  def build_label_name(honeypot, scope = nil); end
  def default_honeypot_options; end
  def invisible_captcha(honeypot = nil, scope = nil, options = nil); end
  def invisible_captcha_styles; end
  def visibility_css(css_class, options); end
end
module InvisibleCaptcha::FormHelpers
  def invisible_captcha(honeypot, options = nil); end
end
class InvisibleCaptcha::Railtie < Rails::Railtie
end
